/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/pages/content/main.js":
/*!***********************************!*\
  !*** ./src/pages/content/main.js ***!
  \***********************************/
/***/ (function() {

eval("console.log('content is open');\n// TEMU的存储地址\nconst downloadList = [];\n// 创建一个自定义的鼠标\n// 定义是否移动的标识\nlet isMove = false;\n// 有个东西包裹了中心点和线条\nconst dot_container = document.createElement('div');\ndot_container.className = 'dot_container';\ndot_container.style.position = \"absolute\";\ndot_container.style.top = \"0\";\ndot_container.style.left = \"0\";\ndot_container.style.width = \"52px\";\ndot_container.style.height = \"52px\";\n// dot_container.style.border = '1px solid #000'\n// dot_container.style.display = \"flex\"\ndot_container.style.display = \"none\";\ndot_container.style.justifyContent = 'center';\ndot_container.style.alignItems = 'center';\ndot_container.style.pointerEvents = 'none';\ndot_container.style.zIndex = '9990';\n// dot_container.style.transform = 'translate(-5px, -5px)'\n// 创建中心点\nconst cursor_center = document.createElement(\"div\");\ncursor_center.className = 'cursor_center';\n// 创建移动的线条\nconst move_line = document.createElement('div');\nmove_line.className = \"line\";\nmove_line.style.transformOrigin = '0 0';\nmove_line.style.position = \"absolute\";\nmove_line.style.height = '1px';\nmove_line.style.top = \"50%\";\nmove_line.style.left = \"50%\";\nmove_line.style.transform = \"translate(-50%,-50%)\";\nmove_line.style.backgroundColor = '#999';\nmove_line.style.backgroundImage = \"linear-gradient(0deg,rgb(255 255 255 / 25%) 0%,white 33%,rgb(255 255 255 / 25%) 66%)\";\nmove_line.style.backgroundSize = \"200% 200%\";\nmove_line.style.display = \"none\";\nmove_line.style.animation = 'engry .5s linear infinite';\n\n// 创建外围动画方块\nconst block_container = document.createElement(\"div\");\nblock_container.className = 'block_container';\nblock_container.style.position = \"absolute\";\nblock_container.style.padding = \"25px\";\nblock_container.style.zIndex = \"9991\";\nblock_container.style.width = \"20px\";\nblock_container.style.height = \"20px\";\nblock_container.style.top = \"101px\";\nblock_container.style.left = \"100px\";\nblock_container.style.border = \"1px solid #999\";\nblock_container.style.pointerEvents = \"none\";\nblock_container.style.display = 'none';\n\n// 创建三个框框用来进行动画操作\nfor (let index = 0; index < 3; index++) {\n  const circleEl = document.createElement('div');\n  circleEl.className = \"circle_item\";\n  circleEl.style.setProperty('--i', index);\n  circleEl.style.display = \"none\";\n  circleEl.style.width = \"50px\";\n  circleEl.style.height = \"50px\";\n  circleEl.style.position = \"absolute\";\n  circleEl.style.left = \"0\";\n  circleEl.style.top = \"0\";\n  circleEl.style.transformOrigin = \"center center\";\n  circleEl.style.border = \"1px solid #999\";\n  circleEl.style.animation = \"normals 2s calc(var(--i) * 1s) linear infinite\";\n  block_container.appendChild(circleEl);\n}\n\n// 设置中间小方块的大小\ncursor_center.style.width = '10px';\ncursor_center.style.height = '10px';\ncursor_center.style.transformOrigin = 'center center';\ncursor_center.style.backdropFilter = 'invert(100%)';\ncursor_center.style.transition = `transform .2s`;\n// 插入小方块和线条\ndot_container.appendChild(cursor_center);\ndot_container.appendChild(move_line);\n\n// 记录上一个点位\nlet prev_x = 0;\nlet prev_y = 0;\n// 监听鼠标移动\n// document.addEventListener('mousemove',(event) => {\n//     // 移动的时候判断我当前是不是移动标识是false,是的话就修改\n//     if(!isMove) {\n//         isMove = !isMove\n//         block_container.classList.remove('has_item')\n//         // 父亲变红\n//         block_container.style.borderColor = 'red'\n//     }\n//     requestAnimationFrame(() => {\n//         // 每次都要划线，所以要记录我上一个地址\n//         const x = event.pageX\n//         const y = event.pageY\n//         dot_container.style.left = x + 'px'\n//         dot_container.style.top = y + 'px'\n//         // 200毫秒之后移动我的block_container\n//         setTimeout(() => {\n//             block_container.style.left = x + 'px'\n//             block_container.style.top = y + 'px'\n//             // 这个地方要重新算一下\n//             calculateLine(dot_container, block_container, move_line)\n//             // 这个地方要关掉,因为已经咩有移动了\n//             isMove = !isMove\n//             // 这个时候才要开启动画\n//             block_container.classList.add('has_item')\n//             // 父亲颜色变回来\n//             block_container.style.borderColor = '#999'\n//         }, 200);\n//     })\n// })\n\n// 监听鼠标左键是否长按\ndocument.addEventListener('mousedown', () => {\n  // 让我的小方块变大,平时用不到啊,妈的\n  // cursor_center.style.transform = 'translateY(5px) scale(5)'\n});\n\n// 监听鼠标左键是否松开\n// document.addEventListener('mouseup',() => {\n//     // 让我的小方块变大,暂时用不到\n//     // cursor_center.style.transform = 'translateY(5px)'\n// })\n\n// 监听鼠标是否移出屏幕\n// document.addEventListener('mouseleave',() => {\n//     dot_container.style.opacity = \"0\"\n//     block_container.style.opacity = \"0\"\n// })\n\n// 监听鼠标进入屏幕\n// document.addEventListener('mouseenter', () => {\n//     dot_container.style.opacity = \"1\"\n//     block_container.style.opacity = \"1\"\n// })\n\n// 时间格式化\nfunction formatTime(date = new Date(), format = 'YYYY-MM-DD HH:mm:ss') {\n  const padZero = num => num < 10 ? '0' + num : num;\n  const year = date.getFullYear();\n  const month = padZero(date.getMonth() + 1); // getMonth() 返回0-11，因此加1\n  const day = padZero(date.getDate());\n  const hours = padZero(date.getHours());\n  const minutes = padZero(date.getMinutes());\n  const seconds = padZero(date.getSeconds());\n  return format.replace(/YYYY/, year).replace(/MM/, month).replace(/DD/, day).replace(/HH/, hours).replace(/mm/, minutes).replace(/ss/, seconds);\n}\n\n// 插入页面中\nonload = () => {\n  // 当前如果是temu.com的话就可以显示TEMU的下载图标\n  if (/temu\\.com/.test(location.href)) {\n    // 插入一个TEMUlogo进来\n    const TEMU_EL = document.createElement('div');\n    TEMU_EL.style.position = \"fixed\";\n    TEMU_EL.style.left = '15px';\n    TEMU_EL.style.top = '50%';\n    TEMU_EL.innerHTML = `\n            <svg class=\"temu_svg\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" width=\"54px\" height=\"54px\" class=\"_3My78Pdp\" alt=\"temu\" aria-label=\"temu\" fill=\"#fb7701\" stroke=\"none\" stroke-width=\"18.962962962962962\"><title>temu</title><path d=\"M796.4 0c125.7 0 227.6 101.9 227.6 227.6l0 568.8c0 125.7-101.9 227.6-227.6 227.6l-568.8 0c-125.7 0-227.6-101.9-227.6-227.6l0-568.8c0-125.7 101.9-227.6 227.6-227.6l568.8 0z m-256 531.9l-13.6 0c-12.1 0-22 9.8-21.9 21.9l0 150.5c0 12.1 9.8 22 21.9 22 12.1 0 22-9.8 22-22l0-98.8 37 52.2c7.7 10.8 23.7 10.8 31.5 0l37-52.2 0 98.8c0 12.1 9.8 22 22 22 12.1 0 22-9.8 21.9-22l0-150.5c0-12.1-9.8-22-21.9-21.9l-13.6 0c-5.2 0-10.2 2.5-13.2 6.8l-47.9 72-48-72c-3-4.3-7.9-6.8-13.2-6.8z m340.2 0c-12.1 0-22 9.8-22 21.9l0 91.9c0 28.9-16.3 43.7-43.1 43.6-26.8 0-43.1-15.3-43-44.9l0-90.6c0-12.1-9.8-22-22-21.9-12.1 0-22 9.8-21.9 21.9l0 91.6c0 53.6 32.8 80.9 86.4 80.9 53.6 0 87.6-27 87.5-82.2l0-90.3c0-12.1-9.8-22-21.9-21.9z m-616.9 0l-128.3 0c-12.1 0-22 9.8-22 21.9 0 12.1 9.8 22 22 22l42.2 0 0 128.3c0 12.1 9.8 22 21.9 22 12.1 0 22-9.8 22-22l0-128.3 42.2 0c12.1 0 22-9.8 22-22 0-12.1-9.8-22-22-21.9z m189.9 0l-118.9 0c-12.1 0-22 9.8-22 21.9l0 150.3c0 12.1 9.8 22 22 22l118.9 0c12.1 0 22-9.8 21.9-22 0-12.1-9.8-22-21.9-22l-97 0 0-31.2 84.4 0c12.1 0 22-9.8 22-21.9 0-12.1-9.8-22-22-22l-84.4 0 0-31.2 97 0c12.1 0 22-9.8 21.9-22 0-12.1-9.8-22-21.9-21.9z m-214.5-229.4l-4.1 0.1c-17.1 1.1-28.8 8.5-35.4 18.5-7.7-11.5-22.1-19.6-43.8-18.4l-0.5 0.7c-2.5 4-11.9 21.9 3.3 41.4 3.1 3.3 10.7 12.6 7.6 24.5l-44.1 71.3c-3.6 5.8-2 13.3 3.5 17.2 11.4 8 34.3 19 74 19 39.6 0 62.5-11 73.9-19l1.5-1.3c4.3-4.1 5.2-10.7 2-15.9l-44-71.3 0.3 1.3-0.5-2c-2.4-10.7 3.6-19.2 6.9-23l0.8-0.8c15.3-19.5 5.8-37.3 3.3-41.4l-0.4-0.7-4.3-0.2z m142.8 33.4c-15.1-30-34.7-35.1-44.5-27.3-7.5 6-24.8 29.7-26 31.3-19.1 27.1-18 33.7 6.5 49.1 13.8 8.7 24.9-2.5 29.7-5.8-2.3 14.3-9.3 36.8-19.8 52.6-5.7-4.3-9.9-7.6-12.5-10-3.3-3-8.3-2.8-11.5 0.3-1.5 1.5-2.3 3.5-2.2 5.7 0.1 2.1 1 4.1 2.5 5.5 25.5 23.3 59 36.5 94.7 36.6 35.8 0 69.5-13.2 95-36.6 3.3-3 3.4-8 0.4-11.2-3.2-3.2-8.2-3.3-11.5-0.3-2 1.8-4 3.5-6.1 5.2l-11.2-25c-1.8-4.3-3.8-9.7-6-16.2 1.1-2.7 3.4-5.3 6.7-8.7 2.4-2.4 4.4-4.8 5.9-7.1 7.4-11.7 3.2-18.6 0.9-23.2-5.3-10.8-13.6-7.3-19.6-0.9-7.4 7.8-14.6 11.2-26.2 13.8-9.7 2.2-17.2 1.1-23.4-2.8-8.6-5.3-21.8-25-21.8-25z m277.3-30.5c-32 30.4-1.3 96.5-59.5 124.6-6.4 3.1-11.7-7.1-20.3-7.1-24.3 0.2-70.7 21.6-72.5 32.4-1.5 8.9 18.3 16 76.7 16.1 50.8 0 67.2-77.3 85-77.4 17.8 0 9.5 70.1 7.6 77.4l18.6 0c-1.6-7.3-2.8-29.3-2.7-60.4 0-31.1 5.6-38 10.1-61.5 3.9-20.4-26.3-38.1-43-44.1z m182.4 2.5l-52.1 0c-33.7 0-61.7 26.1-64 59.7l-3.8 53.9c-1.8 25.6 18.5 47.3 44.1 47.4l99.4 0c25.7 0 45.9-21.7 44.2-47.4l-3.8-53.9c-2.4-33.6-30.3-59.7-64-59.7z m-442.6 124c15.7 0 27.7 7.7 32.1 22-10.7 2.8-21.4 4.2-32.3 4.1-16.4 0-22.2-1.5-32.7-4.3 4.2-12.6 18.1-21.8 32.9-21.8z m392.9-79.3l0 1.5c0 13 10.6 23.7 23.6 23.7 13 0 23.7-10.6 23.7-23.7l0-1.5c0-5.8 21-5.8 21 0l0 1.5c0 24.6-20 44.6-44.7 44.6-24.6 0-44.6-20-44.6-44.6l0-1.5c0-5.8 20.9-5.8 21 0z\"></path></svg>\n            <ul class=\"temu_menu_ul\">\n                <li class=\"menu_ul_li\">\n                    <div class=\"down_180\">下载180尺寸的商品图</div>\n                    <div class=\"down_800\">下载800尺寸的商品图</div>\n                    <div class=\"down_video\">下载视频</div>\n                </li>\n            </ul>\n        `;\n    TEMU_EL.className = 'temu_fix_logo';\n    document.body.appendChild(TEMU_EL);\n    const allOption = document.querySelectorAll('.menu_ul_li div');\n    for (let index = 0; index < allOption.length; index++) {\n      const each_menu_item = allOption[index];\n      each_menu_item.onclick = function () {\n        const item_className = this.className;\n        switch (item_className) {\n          case 'down_180':\n            chrome.runtime.sendMessage({\n              message: 'download_TEMU_Pic',\n              size: '180',\n              downloadList: downloadList\n            });\n            break;\n          case 'down_800':\n            chrome.runtime.sendMessage({\n              message: 'download_TEMU_Pic',\n              size: '800',\n              downloadList: downloadList\n            });\n            break;\n          case 'down_video':\n            const videoEl = document.querySelector('.R9rmoSPn');\n            if (!videoEl) {\n              alert(\"该链接没有上传视频\");\n            } else {\n              chrome.runtime.sendMessage({\n                message: 'download_TEMU_Video',\n                videoHref: videoEl.src\n              });\n            }\n          default:\n            console.log('以外操作');\n        }\n      };\n    }\n    // 给这个icon添加一个右击的监听\n    document.querySelector('.temu_svg').oncontextmenu = function (e) {\n      e.preventDefault();\n      // 我被触发了\n      const menuList = document.querySelector('.temu_menu_ul');\n      menuList.style.display = 'block';\n      // 给整个网页添加点击监听\n      document.onclick = function (e) {\n        menuList.style.display = 'none';\n        // 把监听给关了\n        document.onclick = null;\n      };\n    };\n    const imgList = document.querySelectorAll('._2AOclWz7 img');\n    for (let index = 0; index < imgList.length; index++) {\n      console.log(imgList[index]);\n      const href = imgList[index].dataset.src ? imgList[index].dataset.src : imgList[index].src;\n      downloadList[index] = {\n        imgName: '产品图' + (index + 1) + '.jpg',\n        '180': href,\n        '800': href.replace(/w\\/180/, 'w/800')\n      };\n    }\n    console.log(downloadList);\n  } else if (/amazon\\.com/.test(location.href)) {\n    let amazonDownloadBtn = false;\n    // 如果是亚马逊就显示亚马逊的下载图标\n    // 插入一个TEMUlogo进来\n    const AmazonEl = document.createElement('div');\n    const videoListEl = document.querySelector('.multiple-videos');\n    const container = document.getElementById('div-relatedvideos');\n    let btnTimer = null;\n    if (videoListEl) {\n      // 如果存在的话,那么就去添加点击事件\n      videoListEl.onclick = function (e) {\n        if (!amazonDownloadBtn) {\n          amazonDownloadBtn = true;\n          console.log('获取到数据了,赶紧加input');\n\n          // 拿到所有的视频文件,下次dom更新之前\n          btnTimer = setInterval(() => {\n            const lis = container.querySelectorAll('ol li');\n            if (lis.length) {\n              clearInterval(btnTimer);\n            }\n            // 给ol绑定点击事件\n            const olEl = container.querySelector('ol');\n            let prevUrl = '';\n            olEl.onclick = _debounce(async function (event) {\n              console.log(event);\n              const targetEvent = event.target;\n              // 如果是span,那就拿兄弟\n              const itemName = targetEvent.className;\n              if (itemName === 'amazon_download_btn') {\n                // 拿他兄弟\n                const siblingEl = targetEvent.previousElementSibling;\n                // 她兄弟如果datarsc有值,就去下载视频\n                if (siblingEl) {\n                  const url = siblingEl.dataset.videoUrl;\n                  prevUrl = url;\n                  if (url) {\n                    // 我找到了,然后break出去\n                    downloadAmazonVideo(url, 2);\n                  }\n                }\n              }\n            }, 1000);\n            for (let index = 0; index < lis.length; index++) {\n              const button = document.createElement('span');\n              button.className = 'amazon_download_btn';\n              button.innerText = '下载该视频';\n              lis[index].appendChild(button);\n            }\n          }, 1500);\n        }\n      };\n    }\n    AmazonEl.style.position = \"fixed\";\n    AmazonEl.style.left = '15px';\n    AmazonEl.style.top = '50%';\n    AmazonEl.innerHTML = `\n            <svg class=\"amazon_svg\" t=\"1740114360564\" class=\"icon\" viewBox=\"0 0 2048 1024\" version=\"1.1\"\n                xmlns=\"http://www.w3.org/2000/svg\" p-id=\"7007\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n                width=\"400\" height=\"200\">\n                <path\n                    d=\"M1310.72 286.72h-126.293333V215.04h235.52v64.853333l-119.466667 174.08s47.786667 3.413333 68.266667 10.24c27.306667 6.826667 61.44 23.893333 61.44 23.893334v71.68s-81.92-27.306667-126.293334-27.306667c-54.613333 0-126.293333 27.306667-126.293333 27.306667v-78.506667l133.12-194.56zM310.613333 512l-34.133333-34.133333V283.306667C276.48 242.346667 204.8 204.8 150.186667 204.8 71.68 204.8 10.24 256 6.826667 320.853333h81.92c6.826667-27.306667 27.306667-44.373333 54.613333-44.373333s47.786667 17.066667 47.786667 44.373333v30.72h-68.266667c-17.066667 0-34.133333 3.413333-47.786667 10.24-61.44 27.306667-88.746667 92.16-64.853333 146.773334s92.16 78.506667 153.6 51.2c17.066667-6.826667 30.72-17.066667 40.96-30.72l44.373333 44.373333L310.613333 512z m-204.8-17.066667c-20.48-20.48-13.653333-54.613333 10.24-78.506666 6.826667-6.826667 17.066667-13.653333 23.893334-13.653334h51.2V477.866667l-6.826667 6.826666c-23.893333 23.893333-58.026667 27.306667-78.506667 10.24zM1143.466667 512l-34.133334-34.133333V283.306667c0-40.96-71.68-78.506667-126.293333-78.506667-78.506667 0-139.946667 51.2-143.36 116.053333H921.6c6.826667-27.306667 27.306667-44.373333 54.613333-44.373333s47.786667 17.066667 47.786667 44.373333v30.72h-71.68c-17.066667 0-34.133333 3.413333-47.786667 10.24-61.44 27.306667-88.746667 92.16-64.853333 146.773334s92.16 78.506667 153.6 51.2c17.066667-6.826667 30.72-17.066667 40.96-30.72l44.373333 44.373333 64.853334-61.44z m-201.386667-17.066667c-20.48-20.48-13.653333-54.613333 10.24-78.506666 6.826667-6.826667 17.066667-13.653333 23.893333-13.653334h51.2V477.866667l-3.413333 3.413333c-27.306667 27.306667-61.44 30.72-81.92 13.653333z\"\n                    fill=\"#221E1F\" p-id=\"7008\"></path>\n                <path d=\"M774.826667 300.373333v0z\" fill=\"#221E1F\" p-id=\"7009\"></path>\n                <path\n                    d=\"M686.08 204.8c-37.546667 0-68.266667 23.893333-81.92 64.853333-17.066667-40.96-47.786667-64.853333-85.333333-64.853333s-68.266667 30.72-81.92 71.68V215.04h-85.333334v358.4h85.333334V341.333333c0-30.72 23.893333-51.2 51.2-51.2 13.653333 0 37.546667 23.893333 37.546666 37.546667v242.346667h85.333334v-191.146667-47.786667c3.413333-20.48 27.306667-40.96 47.786666-37.546666 17.066667 0 37.546667 23.893333 37.546667 40.96v238.933333h85.333333v-273.066667C768 245.76 744.106667 204.8 686.08 204.8z\"\n                    fill=\"#221E1F\" p-id=\"7010\"></path>\n                <path d=\"M774.826667 303.786667v13.653333c3.413333-3.413333 3.413333-10.24 0-13.653333z\"\n                    fill=\"#221E1F\" p-id=\"7011\"></path>\n                <path\n                    d=\"M1962.666667 204.8c-37.546667 0-68.266667 30.72-81.92 71.68V215.04h-85.333334v358.4h85.333334V341.333333c0-30.72 23.893333-51.2 51.2-51.2 13.653333 0 37.546667 23.893333 37.546666 37.546667v242.346667H2048V286.72C2048 238.933333 2000.213333 204.8 1962.666667 204.8zM1604.266667 204.8c-81.92 0-146.773333 81.92-146.773334 187.733333 0 102.4 64.853333 187.733333 146.773334 187.733334s146.773333-81.92 146.773333-187.733334c-3.413333-102.4-68.266667-187.733333-146.773333-187.733333z m44.373333 252.586667c0 23.893333-20.48 44.373333-44.373333 44.373333h-3.413334c-23.893333 0-44.373333-20.48-44.373333-44.373333V324.266667c0-23.893333 20.48-44.373333 44.373333-44.373334h3.413334c23.893333 0 44.373333 20.48 44.373333 44.373334v133.12z\"\n                    fill=\"#221E1F\" p-id=\"7012\"></path>\n                <path\n                    d=\"M310.613333 604.16s225.28 143.36 525.653334 146.773333c300.373333 3.413333 409.6-85.333333 436.906666-92.16s20.48 23.893333 0 40.96-276.48 150.186667-477.866666 129.706667-389.12-102.4-488.106667-201.386667c-30.72-34.133333 3.413333-23.893333 3.413333-23.893333z\"\n                    fill=\"#F59328\" p-id=\"7013\"></path>\n                <path\n                    d=\"M1191.253333 631.466667s122.88-23.893333 133.12 0c10.24 23.893333-23.893333 112.64-37.546666 136.533333-10.24 17.066667 13.653333 20.48 23.893333 10.24 10.24-13.653333 68.266667-85.333333 61.44-163.84 0-27.306667-20.48-34.133333-58.026667-34.133333-23.893333 0-105.813333 17.066667-136.533333 34.133333-3.413333 3.413333-6.826667 20.48 13.653333 17.066667z\"\n                    fill=\"#F59328\" p-id=\"7014\"></path>\n            </svg>\n            <ul class=\"amazon_menu_ul\">\n                <li class=\"amazon_menu_ul_li\">\n                    <div class=\"down_180\">下载商品图</div>\n                    <div class=\"down_video\">下载全部视频</div>\n                    <div class=\"down_pic\">下载所有图片</div>\n                </li>\n            </ul>\n        `;\n    AmazonEl.className = 'amazon_fix_logo';\n    document.body.appendChild(AmazonEl);\n    document.querySelector('.amazon_svg').oncontextmenu = function (e) {\n      e.preventDefault();\n      // 我被触发了\n      const menuList = document.querySelector('.amazon_menu_ul');\n      menuList.style.display = 'block';\n      // 给整个网页添加点击监听\n      document.onclick = function (e) {\n        menuList.style.display = 'none';\n        // 把监听给关了\n        document.onclick = null;\n      };\n    };\n    const allOption = document.querySelectorAll('.amazon_menu_ul_li div');\n    for (let index = 0; index < allOption.length; index++) {\n      const each_menu_item = allOption[index];\n      each_menu_item.onclick = async function () {\n        const item_className = this.className;\n        switch (item_className) {\n          case 'down_180':\n            chrome.runtime.sendMessage({\n              message: 'download_TEMU_Pic',\n              size: '180',\n              downloadList: downloadList\n            });\n            break;\n          case 'down_video':\n            // 这个地方要看看有没有视频,没有的话,可下载的视频就不显示了\n            // document.querySelector('._dnNlL_vseVideoDataItem_2A7tm')\n            const container = document.getElementById('div-relatedvideos');\n            const olEl = container.querySelectorAll('ol li');\n            if (!olEl.length) {\n              alert('请点击视频播放后再点击下载视频');\n              return;\n            }\n            let currentDownloadUrl = null;\n            for (let index = 0; index < olEl.length; index++) {\n              const divEl = olEl[index].querySelector('div');\n              // 拿到olEl里面的第一条\n              currentDownloadUrl = divEl.dataset.videoUrl;\n              await downloadAmazonVideo(currentDownloadUrl, 2);\n              await delayFn();\n            }\n            break;\n          case 'down_pic':\n            // 这个地方拿到所有的src\n            const picDivForScript = document.getElementById('imageBlockVariations_feature_div');\n            // 拿他的script元素\n            const picScript = picDivForScript.querySelector('script');\n            const downloadUrl = Array.from(picScript.innerText.match(/\"hiRes\":\"(.*?)\\.jpg\"/g));\n            // 给background修改\n            chrome.runtime.sendMessage({\n              message: 'downloadAmazonPic',\n              picList: downloadUrl\n            });\n          default:\n            console.log('以外操作');\n        }\n      };\n    }\n  }\n  // 将默认的鼠标移除掉\n  // document.documentElement.style.cursor = \"none\"\n  document.documentElement.style.pointEvent = \"none\";\n  document.documentElement.querySelector('body').appendChild(dot_container);\n  document.documentElement.querySelector('body').appendChild(block_container);\n\n  // 我要把我的css先引入到页面中\n  injectFn(chrome.runtime.getURL('/css/zx.css'), \"head\", \"style\");\n\n  // 发个事件给background.js\n  chrome.runtime.sendMessage({\n    message: 'getRate'\n  });\n  // 接收background.js的事件\n  chrome.runtime.onMessage.addListener(async (res, render, sendResponse) => {\n    // 这个地方是去拿汇率\n    if (res.type === 'rate') {\n      // 汇率拿到了\n      console.log('这是汇率信息', res);\n      insertRate(res.data.price, res.data.Title);\n      chrome.runtime.sendMessage({\n        message: \"getId\",\n        data: {\n          id: localStorage.getItem('agentseller-mall-info-id'),\n          cookie: document.cookie\n        }\n      });\n      // 生成一个右侧的小浮动可以看汇率\n    }\n    // 这个事件只是用来提示用户是添加成功还是失败,不进行操作\n    else if (res.type === 'addAccount') {\n      if (res.data.statu !== 200) {\n        // 证明添加账号失败,那么就要告诉用户哪个号有问题要删掉,重新添加\n        alert(res.data.msg);\n      } else {\n        // 这个地方要发消息给我的后台,后台去拿\n        // 添加成功\n        alert(res.data.msg);\n      }\n    }\n\n    // 这个事件是监听我是不是拿到所有的库存信息\n    else if (res.type === 'StockInfo') {\n      console.log('这是当前保存的库存信息', res.data.data);\n      // 在这个地方再格式化吧,生成一个全新的对象,这个地方要进行SKU的配对我看看哈\n      const SortObject = {};\n      // 设置正则表达式,判断,要循环\n      for (let index = 0; index < res.data.data.length; index++) {\n        const element = res.data.data[index];\n        // SKU就俩种格式嘛 要么就xx-yy-zz 要么就xxxxxxx\n        const reg = /[A-Za-z0-9!_]+(@)?(?:-[A-Za-z0-9@!_]+(?:\\s(?=.*[a-zA-Z]+)[a-zA-Z0-9]+)?)+/;\n        // 拿到当前的数组,如果不符合就是null\n        const itemSku = reg.exec(element.ItemName);\n        if (itemSku) {\n          // 符合\n          // 先拿我当前格式完成的key ['XLW-128-BLACK', 'XLW-128']\n          const SortList = Object.keys(SortObject);\n          // 默认里面是没有存储过这个Sku的\n          let hasSku = false;\n          // 当前的SKU\n          const currentSku = itemSku[0].replace(/@/, '');\n          for (let SortList_index = 0; SortList_index < SortList.length; SortList_index++) {\n            // 当前拿到的就是一个SKU而已\n            const save_Sku = SortList[SortList_index];\n            const reg = new RegExp(`${save_Sku}(?![a-zA-Z])`, 'i');\n            // 拿到验证结果,如果在currentSku里面能匹配上,那证明我是保存过的\n            if (reg.test(currentSku)) {\n              // 证明是保存过的,开始循环,看看我当前这个SKU的仓库是不是在SortList里面有\n              for (let index_subItem = 0; index_subItem < element.subItemList.length; index_subItem++) {\n                // 拿仓库名称\n                const currentHouseItem = element.subItemList[index_subItem];\n                // 定义当前的仓库是不是是存在的\n                let isExact = false;\n                // 在SortList里面的list找\n                for (let index_warehouse = 0; index_warehouse < SortObject[save_Sku].warehouseList.length; index_warehouse++) {\n                  // 在这里面去找,是不是有对得上的\n                  const saveHouseItem = SortObject[save_Sku].warehouseList[index_warehouse];\n                  if (currentHouseItem.warehouseName == saveHouseItem.warehouseName) {\n                    // 那么就直接加入到仓库里\n                    saveHouseItem.omsAvailableQuantity += currentHouseItem.omsAvailableQuantity;\n                    // 告诉仓库已经存在\n                    isExact = true;\n                    // 直接退出循环\n                    break;\n                  }\n                }\n                // 如果仓库不存在就要加入进去\n                if (!isExact) {\n                  SortObject[save_Sku].warehouseList = SortObject[save_Sku].warehouseList.concat({\n                    warehouseName: currentHouseItem.warehouseName,\n                    omsAvailableQuantity: currentHouseItem.omsAvailableQuantity\n                  });\n                  SortObject[save_Sku].goodTotalNum += currentHouseItem.omsAvailableQuantity * 1;\n                }\n              }\n              // 在这个地方要先把hasSku修改成有\n              hasSku = true;\n              // 退出来,把仓库那些都搞定了\n              break;\n            }\n          }\n          if (!hasSku) {\n            // 证明我对象里面没有,那么就要初始化\n            SortObject[currentSku] = {\n              warehouseList: element.subItemList,\n              goodTotalNum: element.ItemStock,\n              goodName: element.ItemName.replace('@', '')\n            };\n          }\n        } else {\n          // 这个地方要去判断是不是XJJ123456这种情况\n          const reg2 = /[A-Za-z0-9@!_]{8,}/;\n          const itemSku2 = reg2.exec(element.ItemName);\n          const SortList = Object.keys(SortObject);\n          const currentSku = itemSku2 ? itemSku2[0].replace(/@/, '') : null;\n          if (currentSku) {\n            let hasSku = false;\n            // 如果存在,证明是XJJ123456这种情况\n            for (let SortList_index = 0; SortList_index < SortList.length; SortList_index++) {\n              // 当前拿到的就是一个SKU而已,这个地方直接就是把@都去掉\n              const save_Sku = SortList[SortList_index];\n              const reg = new RegExp(`${save_Sku}(?![a-zA-Z])`, 'i');\n              // 拿到验证结果,如果在currentSku里面能匹配上,那证明我是保存过的\n              if (reg.test(currentSku)) {\n                // 证明是保存过的,开始循环,看看我当前这个SKU的仓库是不是在SortList里面有\n                for (let index_subItem = 0; index_subItem < element.subItemList.length; index_subItem++) {\n                  // 拿仓库名称\n                  const currentHouseItem = element.subItemList[index_subItem];\n                  // 定义当前的仓库是不是是存在的\n                  let isExact = false;\n                  // 在SortList里面的list找\n                  for (let index_warehouse = 0; index_warehouse < SortObject[save_Sku].warehouseList.length; index_warehouse++) {\n                    // 在这里面去找,是不是有对得上的\n                    const saveHouseItem = SortObject[save_Sku].warehouseList[index_warehouse];\n                    if (currentHouseItem.warehouseName == saveHouseItem.warehouseName) {\n                      // 那么就直接加入到仓库里\n                      saveHouseItem.omsAvailableQuantity += currentHouseItem.omsAvailableQuantity;\n                      // 告诉仓库已经存在\n                      isExact = true;\n                      // 直接退出循环\n                      break;\n                    }\n                  }\n                  // 如果仓库不存在就要加入进去\n                  if (!isExact) {\n                    SortObject[save_Sku].warehouseList = SortObject[save_Sku].warehouseList.concat({\n                      warehouseName: currentHouseItem.warehouseName,\n                      omsAvailableQuantity: currentHouseItem.omsAvailableQuantity\n                    });\n                    SortObject[save_Sku].goodTotalNum += currentHouseItem.omsAvailableQuantity * 1;\n                  }\n                }\n                hasSku = true;\n                break;\n              }\n            }\n            if (!hasSku) {\n              // 证明我对象里面没有,那么就要初始化\n              SortObject[currentSku] = {\n                warehouseList: element.subItemList,\n                goodTotalNum: element.ItemStock,\n                goodName: element.ItemName.replace(/@/, '')\n              };\n            }\n          } else {\n            // 证明名称里面没有我要的,那么就去SKU里面拿,这个地方直接匹\n            const finalSku = element.ItemSku.replace(/@/, '');\n            // 有咩有\n            let hasSku = false;\n            for (let SortList_index = 0; SortList_index < SortList.length; SortList_index++) {\n              // 当前拿到的就是一个SKU而已\n              const save_Sku = SortList[SortList_index];\n              const reg = new RegExp(`${save_Sku}(?![a-zA-Z])`, 'i');\n              // 拿到验证结果,如果在currentSku里面能匹配上,那证明我是保存过的\n              if (reg.test(finalSku)) {\n                // 证明是保存过的,开始循环,看看我当前这个SKU的仓库是不是在SortList里面有\n                for (let index_subItem = 0; index_subItem < element.subItemList.length; index_subItem++) {\n                  // 拿仓库名称\n                  const currentHouseItem = element.subItemList[index_subItem];\n                  // 定义当前的仓库是不是是存在的\n                  let isExact = false;\n                  // 在SortList里面的list找\n                  for (let index_warehouse = 0; index_warehouse < SortObject[save_Sku].warehouseList.length; index_warehouse++) {\n                    // 在这里面去找,是不是有对得上的\n                    const saveHouseItem = SortObject[save_Sku].warehouseList[index_warehouse];\n                    if (currentHouseItem.warehouseName == saveHouseItem.warehouseName) {\n                      // 那么就直接加入到仓库里\n                      saveHouseItem.omsAvailableQuantity += currentHouseItem.omsAvailableQuantity;\n                      // 告诉仓库已经存在\n                      isExact = true;\n                      // 直接退出循环\n                      break;\n                    }\n                  }\n                  // 如果仓库不存在就要加入进去\n                  if (!isExact) {\n                    SortObject[save_Sku].warehouseList = SortObject[save_Sku].warehouseList.concat({\n                      warehouseName: currentHouseItem.warehouseName,\n                      omsAvailableQuantity: currentHouseItem.omsAvailableQuantity\n                    });\n                    SortObject[save_Sku].goodTotalNum += currentHouseItem.omsAvailableQuantity * 1;\n                  }\n                }\n                // 在这个地方要先把hasSku修改成有\n                hasSku = true;\n                break;\n              }\n            }\n            if (!hasSku) {\n              // 证明我对象里面没有,那么就要初始化\n              SortObject[finalSku] = {\n                warehouseList: element.subItemList,\n                goodTotalNum: element.ItemStock,\n                goodName: element.ItemName.replace(/@/, '')\n              };\n            }\n          }\n        }\n      }\n      console.log(SortObject, Object.keys(SortObject));\n      // 在这个地方生成一个输入框和一个展示框给查看数据\n      const dialogEl = document.createElement('div');\n      dialogEl.classList.add('dialog_attr');\n      dialogEl.innerHTML = `\n                <div class=\"stock_close\">\n                    <label for=\"changdu\">\n                        <span>長度</span>\n                    </label>\n                    <input id=\"changdu\" placeholder=\"请输入长度\" value=\"260\" />\n                    <label for=\"kuangdu\">\n                        <span>寬度</span>\n                    </label>\n                    <input id=\"changdu\" placeholder=\"请输入宽度\" value=\"260\" />\n                    <div class=\"svg_container\">\n                        <svg style=\"width: inherit; height: auto\" t=\"1740324638854\" class=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\"\n                            xmlns=\"http://www.w3.org/2000/svg\" p-id=\"1466\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n                            width=\"200\" height=\"200\">\n                            <path\n                                d=\"M846.005097 957.24155c-28.587082 0-57.174164-10.911514-78.996169-32.733519L96.632851 254.131955c-43.644009-43.644009-43.644009-114.348328 0-157.992337s114.348328-43.644009 157.992337 0L925.001265 766.515694c43.644009 43.644009 43.644009 114.348328 0 157.992337C903.17926 946.330036 874.592179 957.24155 846.005097 957.24155z\"\n                                fill=\"#FF4400\" p-id=\"1467\"></path>\n                            <path\n                                d=\"M175.62902 957.24155c-28.587082 0-57.174164-10.911514-78.996169-32.733519-43.644009-43.644009-43.644009-114.348328 0-157.992337L767.008928 96.139617c43.644009-43.644009 114.348328-43.644009 157.992337 0s43.644009 114.348328 0 157.992337L254.625188 924.508032C232.803183 946.330036 204.216101 957.24155 175.62902 957.24155z\"\n                                fill=\"#FF4400\" p-id=\"1468\"></path>\n                        </svg>\n                    </div>\n                </div>\n                <div class=\"search_container\">\n                    <div class=\"search\">\n                        <input id=\"search_Stock\" placeholder=\"请输入关键词\" />\n                        <span class=\"line\"></span>\n                    </div>\n                    </div>\n                    <div class=\"visible tip\">暂无数据</div>\n                    <ul class=\"hide tableEl\"></ul>\n                </div>\n            `;\n      // 插入网页\n      document.body.appendChild(dialogEl);\n      // 给他加一个点击按下和移动以及松开的事件\n      let moveX,\n        moveY,\n        endX = 0,\n        endY = 0,\n        isDown;\n      // document.querySelector('.dialog_attr').onmousedown = function(e) {\n      //     // 键盘按下时的位置\n      //     startX = e.clientX\n      //     startY = e.clientY\n      //     isDown = true\n      // }\n      // document.onmousemove = function(e) {\n      //     if(isDown) {\n      //         // 计算出我要移动多少\n      //         moveX = e.clientX - startX + endX\n      //         moveY = e.clientY - startY + endY\n      //         this.style.transform = `translate(${moveX}px, ${moveY}px)` \n      //     }\n      // }\n      // document.onmouseup = function(e) {\n      //     isDown = false\n      //     this.style.transform = `translate(${moveX}px, ${moveY}px)`\n      //     endX = moveX\n      //     endY = moveY\n      // }\n      // 监听,settimeout下\n      setTimeout(() => {\n        document.getElementById('search_Stock').addEventListener('input', _debounce(function () {\n          // 拿到我输入的值\n          const currentValue = this.value?.trim();\n          if (currentValue) {\n            // 有值,那么就显示数据\n            document.querySelector('ul.tableEl').classList.remove('hide');\n            document.querySelector('div.tip').classList.remove('visible');\n            // 有值就要循环了嗷\n            const reg = new RegExp(`${currentValue}`, 'i');\n            // 存储起来\n            let showList = [];\n            for (const key in SortObject) {\n              if (reg.test(key)) {\n                // 退一个对象进去\n                showList = showList.concat(SortObject[key]);\n              }\n            }\n            console.log(showList);\n            // 如果有筛选出来,那么就全部显示到表格里面\n            if (showList.length) {\n              // 组成一个ul和li吧\n              document.querySelector('ul.tableEl').innerHTML = '';\n              for (let index = 0; index < showList.length; index++) {\n                const item = showList[index];\n                let str = `\n                                    <ul>\n                                        <li class=\"skuName\">${item.goodName}</li>\n                                    `;\n                for (let subIndex = 0; subIndex < item.warehouseList.length; subIndex++) {\n                  const currentWareHouse = item.warehouseList[subIndex];\n                  str += `\n                                        <li><span class=\"warehouseName\"><span style=\"font-weight: 700\">仓库名称 </span>${currentWareHouse.warehouseName}: </span><span style=\"font-weight: 700\">库存 </span><span class=\"currentNum\" style=\"color: blue\">${currentWareHouse.omsAvailableQuantity}</span></li>\n                                    `;\n                }\n                // 出来再包起来\n                str += `\n                                    <li class=\"allNum\"><span style=\"font-weight: 700; color: red\">总剩余库存 </span>${item.goodTotalNum}</li>\n                                    </ul>\n                                `;\n                document.querySelector('ul.tableEl').innerHTML += str;\n              }\n            }\n          } else {\n            // 咩有有值,那么就隐藏数据\n            document.querySelector('ul.tableEl').classList.add('hide');\n            document.querySelector('div.tip').classList.add('visible');\n          }\n          console.log(this);\n        }));\n        document.querySelector('.svg_container').addEventListener('click', function () {\n          // 不显示了\n          document.querySelector('.dialog_attr').remove();\n        });\n      });\n    }\n\n    // 下载面单,这个方式下载面单是通过插入a的方式,而不是通过调用downloads的谷歌api进行下载\n    // download的API只能在background里面使用,我测试下来是这样子的\n    // else if (res.type === 'downloadOrder') {\n    //     console.log('我来了就对了', res.data)\n    //     if (res.data.length) {\n    //         // 在这里循环下载\n    //         for (let index = 0; index < res.data.length; index++) {\n    //             const aEl = document.createElement('a')\n    //             aEl.href = res.data[index].url\n    //             aEl.download = res.data[index].fileName\n    //             document.body.appendChild(aEl)\n    //             aEl.click()\n    //             await delayFn()\n    //         }\n    //     }\n    // }\n  });\n\n  // 这个地方是真正去发消息的地方\n  async function downloadAmazonVideo(currentDownloadUrl, Resolution) {\n    // 证明拿到了\n    let tsFileList = [];\n    let downFileList = [];\n    // 我找到了,然后break出去\n    const u3m8Url = currentDownloadUrl;\n    let baseURL = u3m8Url.replace(/\\/default.*/, '');\n    baseURL = baseURL.replace(/\\/embedded.*/, '');\n    async function download_fileUrl(filePath) {\n      const result = await fetch(filePath).then(res => res.text());\n      // 这个地方要正则下\n      let reg = /default\\.jobtemplate\\.[\\w.]+\\.m3u8/g;\n      if (!result.match(reg)) {\n        reg = /default\\.vertical\\.jobtemplate\\.[\\w.]+\\.m3u8/g;\n      }\n      downFileList = Array.from(result.match(reg));\n    }\n    await download_fileUrl(u3m8Url);\n    if (downFileList.length) {\n      const tsResult = await fetch(baseURL + '/' + downFileList[Resolution]).then(res => res.text());\n      if (tsResult.length) {\n        let reg = /default\\.jobtemplate\\.[\\w.]+\\.ts/g;\n        if (!tsResult.match(reg)) {\n          reg = /default\\.vertical\\.jobtemplate\\.[\\w.]+\\.ts/g;\n        }\n        tsFileList = Array.from(tsResult.match(reg));\n        for (let index = 0; index < tsFileList.length; index++) {\n          tsFileList[index] = baseURL + '/' + tsFileList[index];\n        }\n      }\n      if (tsFileList.length) {\n        chrome.runtime.sendMessage({\n          message: 'download_amazon_Video',\n          tsFileList\n        });\n      }\n    }\n  }\n\n  // 刚进来的时候就开始验证,如果当前是进入地址为:\n  function getCookieByDianXiaoMi() {\n    const url = 'https://pcpc.jfwms.net/web/dashboard';\n    const currentUrl = location.href;\n    if (currentUrl == url) {\n      // 证明是,那就发送自定义事件,并将当前的Cookie组装好发过去\n      chrome.runtime.sendMessage({\n        message: 'dianxiaomicookie',\n        cookie: document.cookie\n      });\n    }\n  }\n  getCookieByDianXiaoMi();\n\n  // 插入js文件，暂时不用用到这个，这个结合那个网络拦截一起用\n  // injectFn(chrome.runtime.getURL('/js/zx.js'), \"head\")\n\n  function insertRate(value, title) {\n    const node = document.createElement('div');\n    node.classList.add('my_rate');\n    node.style.position = \"fixed\";\n    node.style.top = \"70px\";\n    node.style.right = \"30px\";\n    node.style.padding = \"10px\";\n    node.style.zIndex = \"9999\";\n    node.style.color = \"#000\";\n    node.innerHTML = `\n            <div class=\"calculate\" style=\"font-size: 16px; border: 1px solid #000; padding: 15px; display: flex; justify-content: center; align-items: center; background-color: rgba(255,255,255,.8);position: absolute;top:0;right:0;transform:scale(0);transition: transform .5s ease; transform-origin: top right;flex-direction: column\">\n                <p>汇率转换</p>\n                <h3 style=\"font-size: 14px; text-align: center\">${title}</h3>\n                <input style=\"font-size: 16px\" id=\"rate\" type=\"text\" value=${value} disabled style=\"font-weight: 700; text-align: center\" />\n                <input style=\"font-size: 16px;margin: 10px 0\" id=\"rmb\" ype=\"text\" placeholder=\"请输入人民币\" />\n                <input style=\"font-size: 16px\" id=\"result\" type=\"text\" value=0 disabled style=\"font-weight: 700;\" />\n            </div>\n            <span class=\"close\" style=\"width: 25px;height:25px;padding: 5px;border-radius: 50%; background-color: #000;position:absolute;top:0;right: 0;transform:translate(50%,-50%);cursor:pointer;\">\n                <svg class=\"close_icon\" style=\"height: 100%; width: 100%;\" t=\"1738912985706\" class=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\"\n                    xmlns=\"http://www.w3.org/2000/svg\" p-id=\"6250\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n                    width=\"200\" height=\"200\">\n                    <path\n                        d=\"M872.778827 254.203062l-620.739643 592.59052-109.312046-114.504566 620.739643-592.59052 109.312046 114.504566Z\"\n                        fill=\"#d81e06\" p-id=\"6251\"></path>\n                    <path\n                        d=\"M268.693068 128.199468l592.589813 620.738902-114.505306 109.312753-592.589813-620.738902 114.505306-109.312753Z\"\n                        fill=\"#d81e06\" p-id=\"6252\"></path>\n                </svg>\n                <svg class=\"rate_icon\" style=\"height: 100%; width: 100%;\" t=\"1738912972797\" class=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\"\n                    xmlns=\"http://www.w3.org/2000/svg\" p-id=\"5218\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n                    width=\"200\" height=\"200\">\n                    <path\n                        d=\"M976 368H768c-25.6 0-48-22.4-48-48s22.4-48 48-48h83.2C774.4 166.4 652.8 96 512 96 281.6 96 96 281.6 96 512c0 25.6-22.4 48-48 48S0 537.6 0 512C0 230.4 230.4 0 512 0c172.8 0 323.2 83.2 416 214.4V128c0-25.6 22.4-48 48-48s48 22.4 48 48v192c0 25.6-22.4 48-48 48M48 656h208c25.6 0 48 22.4 48 48s-22.4 48-48 48h-83.2C246.4 857.6 371.2 928 512 928c230.4 0 416-185.6 416-416 0-25.6 22.4-48 48-48s48 22.4 48 48c0 281.6-230.4 512-512 512-172.8 0-323.2-86.4-416-214.4V896c0 25.6-22.4 48-48 48S0 921.6 0 896V704c0-25.6 22.4-48 48-48m595.2-128c16 0 32-12.8 32-32 0-16-12.8-32-32-32h-96v-16l115.2-121.6c12.8-12.8 12.8-32 0-44.8-12.8-12.8-32-12.8-44.8 0l-99.2 105.6-105.6-105.6c-12.8-12.8-32-12.8-44.8 0-12.8 12.8-12.8 32 0 44.8l115.2 115.2v19.2h-92.8c-16 0-32 16-28.8 32 0 16 12.8 28.8 28.8 28.8h92.8v64h-92.8c-16 0-32 12.8-32 32 0 16 12.8 32 32 32h92.8v92.8c0 16 12.8 32 32 32 16 0 32-12.8 32-32v-92.8h96c16 0 32-12.8 32-32 0-16-12.8-32-32-32h-96v-64l96 6.4z\"\n                        fill=\"#6c40eb\" p-id=\"5219\"></path>\n                </svg>\n            </span>\n        `;\n    // 插入页面\n    document.body.appendChild(node);\n    // 插入之后设置一个监听, 然后使用防抖\n    const rmb = document.getElementById('rmb');\n    const calculate = document.querySelector('.calculate');\n    rmb.addEventListener('input', _debounce(function () {\n      // 在这里面要拿到我的input输入,然后拿到值,之后进行计算\n      const result = document.getElementById('result');\n      const rate = document.getElementById('rate');\n      if (rmb.value) {\n        // 这个是人民币\n        const amount = parseInt(rmb.value);\n        // 这个是汇率\n        const rateValue = parseFloat(rate.value);\n        // 然后进行计算,赋值下结果\n        result.value = (amount * rateValue).toFixed(3);\n      } else {\n        result.value = 0;\n      }\n    }));\n    // 当点击关闭按钮的时候,收缩父亲\n    document.querySelector('.close .close_icon').onclick = function () {\n      document.querySelector('.rate_icon').style.display = 'block';\n      this.style.display = 'none';\n      calculate.style.transform = 'scale(0)';\n    };\n    // 点击按钮的时候，释放父亲\n    document.querySelector('.close .rate_icon').onclick = function () {\n      document.querySelector('.close_icon').style.display = 'block';\n      this.style.display = 'none';\n      calculate.style.transform = 'scale(1)';\n    };\n  }\n\n  // -------------------------------------------------------------\n  // Shipout针对速卖通的格式化,这个地方要判断一下是不是进入了app/outbound页面\n  // 如果刚进来就识别到card-box那么就不用轮训,如果进来没识别到就先查询下是不是当前已经进入对应页面\n  let autoInput = null;\n  let alreadyEnter = false;\n  let timer = null;\n  const href = location.href;\n  // https://oms.shipout.com/o/#/app/outbound/parcel?omsStatus=1\n  // 直接查询是否是以oms.shipout/com开头,如果是再轮训\n  const reg = /https:\\/\\/oms.shipout.com/g;\n  if (reg.test(href)) {\n    setIntervalHref();\n  }\n  /**\n   * 根据用户填写的内容进行校准填写\n   */\n  function format_AliExpress_Address() {\n    console.log(\"有用户要使用ShipOut进行发货出库操作\");\n    // 拿到存放这部分内容的类名\n    const section_By_autoInput = document.querySelector('.auto-input');\n    // 拿到这部分内容的自动识别的输入框,拿到他的值\n    const autoInput_content = section_By_autoInput.querySelector('.el-textarea__inner');\n    // 用户输入的自动识别的值\n    const input_value = autoInput_content?.value;\n    console.log('用户黏贴进来的值', input_value.split('\\n'));\n    const splitArr = input_value.split('\\n');\n    // 第一个参数就是对应姓名的\n    const fileName = splitArr[0];\n    // 替换进去\n    document.querySelector('input[placeholder=\"姓名\"]').value = fileName;\n    // 第二个参数要细分地址\n    const location_po = splitArr[1].split(',');\n    // const country = location_po[0]\n    // 替换进去\n    document.querySelector('input[placeholder=\"国家/地区\"]').value = 'United States';\n    const area = location_po[1];\n    // 替换进去\n    // document.querySelector('input[placeholder=\"州/省\"]').value = area\n    const city = location_po[2];\n    // 替换进去\n    // document.querySelector('input[placeholder=\"市\"]').value = city\n    const address = location_po[3];\n    // 替换进去\n    document.querySelector('input[placeholder=\"地址行 1\"]').value = address;\n    // 第三个参数是邮编\n    const postcode = splitArr[2];\n    // 替换进去\n    document.querySelector('input[placeholder=\"邮编\"]').value = postcode;\n    // 第四个参数是电话,1可以省略\n    let cellPhone = splitArr[3];\n    const reg = /\\+?1\\s+(.*)/;\n    cellPhone = cellPhone.match(reg)[1];\n    document.querySelector('input[placeholder=\"手机号码\"]').value = cellPhone;\n  }\n  /**\n   * 插入校准按钮进行点击\n   */\n  function addBtn() {\n    autoInput.parentElement.style.position = 'relative';\n    const format_btn = document.createElement('div');\n    format_btn.classList.add('format_btn');\n    format_btn.style.position = 'absolute';\n    format_btn.style.top = '50%';\n    format_btn.style.left = '-20px';\n    format_btn.textContent = '更新';\n    format_btn.style.padding = '15px';\n    format_btn.style.borderRadius = '5px';\n    format_btn.style.transition = 'border-radius .3s linear, border-color .3s linear';\n    format_btn.style.transform = 'translateX(-100%)';\n    format_btn.style.border = '1px solid #999';\n    // 添加点击事件\n    format_btn.onclick = () => {\n      format_AliExpress_Address();\n    };\n    autoInput.parentElement.appendChild(format_btn);\n  }\n  /**\n   * 动态监听当前是否是还没有进入了那个页面\n   */\n  function setIntervalHref(add = true) {\n    // 已对应上网站,监听hash变化\n    timer = setInterval(() => {\n      // 就是没进入到的情况下\n      const reg = /newParcel/g;\n      if (reg.test(location.href)) {\n        // 重新赋值\n        autoInput = document.querySelector('.auto-input');\n        // 先插入可以格式化的按钮\n        add && addBtn();\n        // 把当前的setinterval清理掉\n        clearInterval(timer);\n        // 开始监听url切换\n        timer = setInterval(() => {\n          // 看我当前的href是不是还是包含这个newParcel,是就退\n          if (reg.test(location.href)) {} else {\n            // 不是了,那就可以开始设置alreadry了\n            clearInterval(timer);\n            // 赋值回调\n            setIntervalHref(false);\n          }\n        }, 2000);\n      }\n    }, 1000);\n  }\n  // ----------------------------------------------------\n\n  // 设置页面的复制粘贴,相当于直接将他的复制粘贴给修改掉,先监听下是不是网页的copy\n  // chrome.runtime.getURL('./zx.js') 这个可以拿到我相对路径下的文件所在位置,然后植入\n};\n\n// 设置一个函数用来算我的方框和我的移动点之间的距离\n/**\n * \n * @param {Element} circle1 移动圈\n * @param {Element} circle2 动画圈\n * @param {Element} line  线条\n */\nfunction calculateLine(circle1, circle2, line) {\n  const rect1 = circle1.getBoundingClientRect();\n  const rect2 = circle2.getBoundingClientRect();\n\n  // 拿到他们的距离之后,求圆心的距离\n  // 动画圈圆心\n  const x1 = rect2.left - rect2.width;\n  const y1 = rect2.top - rect2.height;\n\n  // 移动圈圆心\n  const x2 = rect1.left - rect1.width;\n  const y2 = rect1.top - rect1.height;\n\n  // 算出第三条边,也就是延伸出来的长度\n  const extendWidth = Math.sqrt((x2 - x1) ** 2 + (y2 - y1) ** 2);\n  // 算出旋转角度,这里算出了夹角,要算出俩个方块分别的角度\n  const rotateAngle = Math.atan2(y1 - y2, x1 - x2) * 180 / Math.PI;\n  setTimeout(() => {\n    line.style.width = extendWidth + 'px';\n    line.style.transform = 'rotate(' + rotateAngle + 'deg)';\n  });\n}\n\n/**\n * 强制等待\n * @param {number} timeout 延迟毫秒数\n */\nasync function delayFn(timeout = 1000) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      resolve();\n    }, timeout);\n  });\n}\nfunction injectFn(filePath, node, type) {\n  const typeList = ['style', 'javascript'];\n  if (!typeList.includes(type)) return;\n  let link = null;\n  if (type === 'style') {\n    link = document.createElement('link');\n    link.setAttribute('href', filePath);\n    link.setAttribute('rel', 'stylesheet');\n  } else {\n    link = document.createElement('script');\n    link.setAttribute('type', `text/${type}`);\n    link.setAttribute('src', filePath);\n  }\n  const Element = document.querySelector(node);\n  Element.insertBefore(link, Element.firstChild);\n  console.log(\"植入成功\");\n}\n\n// 拦截请求，待定吧，先弄点别的，找个地方放我的汇率\n// chrome.webRequest.onBeforeRequest.addListener((details) => {\n//     console.log('请求详情', details)\n// })\n\n// 设置防抖\nfunction _debounce(fn, time = 500) {\n  let timer;\n  return function (...arg) {\n    timer && clearTimeout(timer);\n    timer = setTimeout(() => {\n      fn.call(this, ...arg);\n    }, time);\n  };\n}\n\n// 节流\nfunction _throttle(fn, dur_time) {\n  let timer;\n  return function (...arg) {\n    if (!timer) {\n      timer = new Date().getTime();\n      // 这个地方调函数\n      fn(...arg);\n    }\n    let currenttimer = new Date().getTime();\n    let timed = currenttimer - timer;\n    if (timed >= dur_time) {\n      fn(...arg);\n      timer = currenttimer;\n    }\n  };\n}\n\n//# sourceURL=webpack://vue3-chrome-ext-template/./src/pages/content/main.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/pages/content/main.js"]();
/******/ 	
/******/ })()
;